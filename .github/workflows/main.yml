# ---------------------------------------------------------------------------
# CI workflows for MTDA
# ---------------------------------------------------------------------------
#
# This software is a part of MTDA.
# Copyright (C) 2025 Siemens AG
#
# ---------------------------------------------------------------------------
# SPDX-License-Identifier: MIT
# ---------------------------------------------------------------------------

name: CI

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
    types: [ labeled ]

jobs:
  lint:
    name: Check code for issues
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: tox
        run: |
          sudo apt install -y build-essential libsystemd-dev
          pip3 install --user tox
          tox -s
  kas-ci:
    name: Build kas/ci targets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Free Disk Space
        uses: ./.github/workflows/free-disk-space
      - name: Cache downloads and sstate
        uses: actions/cache@v4
        with:
          key: ${{ hashFiles('debian/changelog') }}
          path: |
            build/downloads
            build/sstate-cache
      - name: Build Fast CI targets
        if: github.ref != 'refs/heads/master' && !startsWith(github.ref, 'refs/tags/v')
        run: |
          ./kas-container build kas/ci/fast.yml
      - name: Build Full CI targets
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')
        run: |
          ./kas-container build kas/ci/full.yml
      - name: Upload NanoPI images
        uses: actions/upload-artifact@v4
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          name: mtda-nanopi-images
          path: |
            build/tmp/deploy/images/nanopi-*/mtda-image-mtda-*-nanopi-*.wic
            build/tmp/deploy/images/nanopi-*/mtda-image-mtda-*-nanopi-*.wic.bmap
      - name: Upload BeagleBone Black images
        uses: actions/upload-artifact@v4
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          name: mtda-bbb-images
          path: |
            build/tmp/deploy/images/beaglebone-*/mtda-image-mtda-*-beaglebone-*.wic
            build/tmp/deploy/images/beaglebone-*/mtda-image-mtda-*-beaglebone-*.wic.bmap
      - name: Publish Debian packages to Gemfury
        env:
          GEMFURY_PUSH_TOKEN: ${{ secrets.GEMFURY_PUSH_TOKEN }}
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          find build/tmp/deploy/isar-apt/mtda-bookworm-* -name '*.deb' -print | while read p; do
            curl -F package=@${p} https://{$GEMFURY_PUSH_TOKEN}@push.fury.io/mtda/;
          done
      - name: Import GPG key
        if: startsWith(github.ref, 'refs/tags/v')
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
      - name: Upload source packages to PPA
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          sudo apt install -y devscripts dh-python equivs python3-sphinx
          ./scripts/build-using-ppa ${PWD}/build noble
      - name: Upload images to GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/tmp/deploy/images/nanopi-*/mtda-image-mtda-*-nanopi-*.wic
            build/tmp/deploy/images/nanopi-*/mtda-image-mtda-*-nanopi-*.wic.bmap
            build/tmp/deploy/images/beaglebone-*/mtda-image-mtda-*-beaglebone-*.wic
            build/tmp/deploy/images/beaglebone-*/mtda-image-mtda-*-beaglebone-*.wic.bmap
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
