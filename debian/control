Source: mtda
Section: devel
Priority: extra
Maintainer: Cedric Hombourger <cedric.hombourger@siemens.com>
Build-Depends: debhelper (>=10) | dh-systemd,
               dh-python,
               libpython3-all-dev,
               python3-all-dev:any,
               python3-setuptools,
               python3-sphinx:native <!nodoc>,
               python3-sphinx-rtd-theme:native <!nodoc>
Rules-Requires-Root: no
Standards-Version: 4.5.0 
Homepage: https://github.com/siemens/mtda
X-Python3-Version: >= 3.7

Package: mtda-service
Architecture: all
Multi-Arch: foreign
Depends: mtda-common,
         dnsmasq-base,
         iptables,
         python3-daemon,
         python3-gevent,
         python3-libgpiod,
         python3-netifaces,
         python3-psutil,
         python3-requests,
         python3-serial,
         python3-systemd,
         python3-usb,
         python3-zeroconf,
         python3-zmq,
         python3-zstandard,
         usbrelay,
         ${misc:Depends},
         ${sphinxdoc:Depends}
Built-Using: ${sphinxdoc:Built-Using}
Replaces: mtda-usb-functions
Suggests: nbd-server
Description: Multi-Tenant Device Access service
 Provide the infrastructure for running MTDA as a systemd
 service.

Package: mtda
Architecture: all
Multi-Arch: foreign
Depends: mtda-client,
         mtda-service
Description: Multi-Tenant Device Access
 Multi-Tenant Device Access (or MTDA for short) is a relatively
 small Python application and library acting as an interface
 to a test device. It provides mechanisms to remotely turn the
 device on or off (assuming an IP/USB power switch is available),
 plug USB devices in or out (also requiring special hardware) or
 simply access its console (in most cases serial).

Package: mtda-client
Architecture: all
Multi-Arch: foreign
Depends: mtda-common,
         python3-boto3,
         wamerican,
         ${misc:Depends}
Suggests: nbd-client
Description: CLI for Multi-Tenant Device Access
 Provide a simple command line interface to interact with a
 MTDA instance over the network.

Package: mtda-common
Architecture: all
Multi-Arch: foreign
Depends: python3:any (>= 3.7~),
         python3-pyro4
Description: common modules for Multi-Tenant Device Access
 Modules shared between the service and the client.

Package: mtda-docker
Architecture: all
Multi-Arch: foreign
Depends: mtda-service,
         docker-ce | docker.io,
         python3-docker
Description: control docker containers using MTDA
 Provide drivers to start/stop a container from MTDA and interact
 with it.

Package: mtda-kvm
Architecture: all
Multi-Arch: foreign
Depends: mtda-service,
         qemu-kvm
Description: KVM machine managed by MTDA
 Provide a KVM machine with a MTDA interface to control its
 life-cycle and connected devices.

Package: mtda-pytest
Architecture: all
Multi-Arch: foreign
Depends: mtda-client,
         python3-pytest
Description: support for pytest code that uses MTDA
 Provide helper classes to write tests with the pytest and MTDA
 frameworks.

Package: mtda-www
Architecture: all
Multi-Arch: foreign
Depends: mtda-service,
         python3-systemd,
         python3-tornado,
         novnc,
         websockify
Description: web-based user-interface for MTDA
 Provide a simple web-base user-interface to interact with
 devices under test.
